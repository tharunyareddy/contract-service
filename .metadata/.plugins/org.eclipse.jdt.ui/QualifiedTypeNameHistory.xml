<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.easyservice.repository.IContractorRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.Enumerated"/>
    <fullyQualifiedTypeName name="javax.persistence.EnumType"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToOne"/>
    <fullyQualifiedTypeName name="javax.persistence.CascadeType"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Task"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Worker"/>
    <fullyQualifiedTypeName name="java.lang.Boolean"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.easyservice.service.IContractorService"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Priority"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="java.net.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="com.easyservice.service.ContractorServiceImpl"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Status"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.hibernate.TypeMismatchException"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="com.easyservice.exception.ContractorNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.config.server.EnableConfigServer"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.easyservice.exception.ContractNotFoundException"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Contractor"/>
    <fullyQualifiedTypeName name="com.easyservice.model.Maintenance"/>
    <fullyQualifiedTypeName name="com.easyservice.exception.MaintenanceNotFoundException"/>
</qualifiedTypeNameHistroy>
